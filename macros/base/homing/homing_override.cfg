# Homing Override for dockable probe
[homing_override]
axes: xyz
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set homing_zhop = printer["gcode_macro _USER_VARIABLES"].homing_zhop|float %}
    {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES"].homing_travel_speed * 60 %}
    {% set homing_travel_accel = printer["gcode_macro _USER_VARIABLES"].homing_travel_accel %}
    {% set z_drop_speed = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}
    {% set status_leds_enabled = printer["gcode_macro _USER_VARIABLES"].status_leds_enabled %}
    {% set sensorless_homing_enabled = printer["gcode_macro _USER_VARIABLES"].sensorless_homing_enabled %}
    {% set home_mesh_point = printer["gcode_macro _USER_VARIABLES"].home_mesh_point %}

    {% set homing_first = printer["gcode_macro _USER_VARIABLES"].homing_first %}
    {% set x_homing_backoff, y_homing_backoff = printer["gcode_macro _USER_VARIABLES"].homing_backoff_distance_xy|map('float') %}

    {% set x_position_endstop = printer["configfile"].config["stepper_x"]["position_endstop"]|float %}
    {% set y_position_endstop = printer["configfile"].config["stepper_y"]["position_endstop"]|float %}

    # reset parameters
    {% set X, Y, Z = False, False, False %}
    
    {% if status_leds_enabled %}
        STATUS_HOMING
    {% endif %}
    
    # which axes have been requested for homing
    {% if not 'X' in params
        and not 'Y' in params
        and not 'Z' in params %}

        {% set X, Y, Z = True, True, True %}

    {% else %}
        {% if 'X' in params %}
            {% set X = True %}
        {% endif %}

        {% if 'Y' in params %}
            {% set Y = True %}
        {% endif %}

        {% if 'Z' in params %}
            {% set Z = True %}
        {% endif %}

        {% if 'X' in params
          and 'Y' in params
          and 'Z' in params %}
            # reset homing state variables
            # if homing all axes
            _HOMING_VARIABLES reset=1
         {% endif %}

    {% endif %}

    # Set the homing acceleration prior to any movement
    {% set saved_accel = printer.toolhead.max_accel %}
    {% set saved_decel = printer.toolhead.max_accel_to_decel %}
    M204 S{homing_travel_accel}


    {% if not home_mesh_point %}
        BED_MESH_CLEAR
    {% endif %}
    G90

    {% if Z %}
        {% if ('z' in printer.toolhead.homed_axes) %}
            {% if (printer.toolhead.position.z < homing_zhop) %}
                {% if verbose %}
                    { action_respond_info("Z too low, performing ZHOP") }
                {% endif %}
                G91
                G0 Z{homing_zhop} F{z_drop_speed}
            {% endif %}
        {% else %}
            {% if verbose %}
                { action_respond_info("Z not homed, forcing full G28") }
            {% endif %}
            SET_KINEMATIC_POSITION X=0 Y=0 Z=0
            G0 Z{homing_zhop} F{z_drop_speed}
            {% set X, Y, Z = True, True, True %}
        {% endif %}
    {% endif %}

    G90

    {% if homing_first == "X" %}
        {% if X %} # Home x
            {% if verbose %}
                { action_respond_info("Homing X") }
            {% endif %}
            {% if sensorless_homing_enabled %}
                _SENSORLESS_HOME_X
            {% else %}
                G28 X0
                G1 X{x_position_endstop + x_homing_backoff} F{homing_travel_speed}
            {% endif %}
        {% endif %}
        {% if Y %} # Home y
            {% if verbose %}
                { action_respond_info("Homing Y") }
            {% endif %}
            {% if sensorless_homing_enabled %}
                _SENSORLESS_HOME_Y
            {% else %}
                G28 Y0
                G1 Y{y_position_endstop + y_homing_backoff} F{homing_travel_speed}
            {% endif %}
        {% endif %}
    
    {% elif homing_first == "Y" %}
        {% if Y %} # Home y
            {% if verbose %}
                { action_respond_info("Homing Y") }
            {% endif %}
            {% if sensorless_homing_enabled %}
                _SENSORLESS_HOME_Y
            {% else %}
                G28 Y0
                G1 Y{y_position_endstop + y_homing_backoff} F{homing_travel_speed}
            {% endif %}
        {% endif %}
        {% if X %} # Home x
            {% if verbose %}
                { action_respond_info("Homing X") }
            {% endif %}
            {% if sensorless_homing_enabled %}
                _SENSORLESS_HOME_X
            {% else %}
                G28 X0
                G1 X{x_position_endstop + x_homing_backoff} F{homing_travel_speed}
            {% endif %}
        {% endif %}

    {% else %}
        { action_respond_error("Axis homing order not valid. Choose either X or Y first in the variables.cfg file!") }
    {% endif %}


    # Home z
    {% if Z %}
        {% if verbose %}
            { action_respond_info("Homing Z") }
        {% endif %}
        _GOTO_Z_PROBE
        SET_GCODE_OFFSET Z=0
        G28 Z0
        G0 Z{homing_zhop} F{z_drop_speed}

    {% endif %}

    # Reset acceleration values to what it was before
    SET_VELOCITY_LIMIT ACCEL={saved_accel}

    {% if status_leds_enabled %}
        STATUS_READY
    {% endif %}

[gcode_macro _GOTO_Z_PROBE]
description: Move to z probe location
gcode:
    # If the adaptive bed meshing is enabled, probe in the center of the mesh
    # Else we fall back on the variable_zendstop_position set in the variables.cfg file
    {% set bed_mesh_enabled = printer["gcode_macro _USER_VARIABLES"].bed_mesh_enabled %}
    {% set endstop_at_mesh_center = printer["gcode_macro _USER_VARIABLES"].endstop_at_mesh_center %}

    {% set z_endstop_x, z_endstop_y = printer["gcode_macro _USER_VARIABLES"].zendstop_position|map('float') %}
    {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES"].homing_travel_speed|float * 60 %}

    {% set current_x = printer.toolhead.position.x|float %}
    {% set current_y = printer.toolhead.position.y|float %}

    SAVE_GCODE_STATE NAME=goto_ZProbe
    G90
   
    G0 X{z_endstop_x} Y{z_endstop_y} F{homing_travel_speed}
    
    RESTORE_GCODE_STATE NAME=goto_ZProbe